<nav>
  <div class="nav-wrapper main_nav">
    
    <ul class="right">
      <li><a><i class="material-icons opener">search</i></a></li>
    </ul>
    <a href="#" class="brand-logo center">HUFSPOON</a>
  </div>
  
    <div class="nav-wrapper nav_form">
      <form action="/">
        <div class="input-field">
          <input id="search" type="search" required>
          <label for="search"><i class="material-icons">search</i></label>
          <i class="material-icons closer">close</i>
        </div>
      </form>
    </div>
</nav>
<div class="row">
    <br>
    <div class="col s12 m10 offset-m1 l8 offset-l2">
      <div class="card">
        <div class="card-content" id="map" style="height:300px;"></div>
          
      </div>
    </div>
</div>
<script src="//apis.daum.net/maps/maps3.js?apikey=23598cdf36f0c5f5bf1f1bfda70b8e80&libraries=services"></script>
<script>
    var placeOverlay = new daum.maps.CustomOverlay({zIndex:1}), 
    contentNode = document.createElement('div');
	var markers=[1];
	var container = document.getElementById('map');
	var options = {
		center: new daum.maps.LatLng(37.597415, 127.057824),
		level: 3
	};

	var map = new daum.maps.Map(container, options);
	var ps = new daum.maps.services.Places();  
  // 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다 
  contentNode.className = 'placeinfo_wrap';
  
  // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때
  // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 daum.maps.event.preventMap 메소드를 등록합니다 
  addEventHandle(contentNode, 'mousedown', daum.maps.event.preventMap);
  addEventHandle(contentNode, 'touchstart', daum.maps.event.preventMap);
  
  // 커스텀 오버레이 컨텐츠를 설정합니다
  placeOverlay.setContent(contentNode);
  var positions=[];
    allshow();
  $(".opener").click(function(){
    $(".main_nav").hide();
    $(".nav_form").fadeIn();
    document.getElementById("search").focus();
  })
  $(".closer").click(function(){
    $(".nav_form").hide();
    $(".main_nav").fadeIn();
  })
  
  
  
  function allshow(){
    for (var i = 0; i < positions.length; i ++) {
    
        var marker = new daum.maps.Marker({
            map: map, // 마커를 표시할 지도
            position: positions[i].latlng, // 마커를 표시할 위치
            clickable: true
        });
        (function(iwcontent,position) {
                daum.maps.event.addListener(marker, 'click', function() {
                    displayPlaceInfo(iwcontent,position);
                });
            })(positions[i].iwContent,positions[i].latlng);
        markers.push(marker);
    };
  };
  
  	
    
    function displayPlaceInfo (iwcontent,position) {
        var content = '<div class="placeinfo">'+iwcontent+
                        '<span>'+
                        '<span style="text-align: right;" onclick="overlayclose();" class="material-icons" aria-hidden="true">clear</span>'+
                        '</span></div>'+
                        '<div class="after"></div>';
        contentNode.innerHTML = content;
        placeOverlay.setPosition(position);
        placeOverlay.setMap(map);  
    }
    
    function overlayclose(){
      placeOverlay.setMap(null);
    }
    
    function addEventHandle(target, type, callback) {
    if (target.addEventListener) {
        target.addEventListener(type, callback);
    } else {
        target.attachEvent('on' + type, callback);
        }
    }
</script>